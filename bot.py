from telegram.ext import *
from telegram import *
from other.weather import weather
from other.comments import comments
from maps.metro import metro
from maps.pharmacy import pharmacy
from maps.closest_mac import closest_mac
from games.guess_the_city import guess_the_city
from games.dice import throw_a_cube, dice
from covid.covid_info import global_stats, all_countries
from covid.infographics import death_graph, vaccine_graph, new_cases_graph
import argparse
import requests

parser = argparse.ArgumentParser()

try:
    parser.add_argument("token", nargs="*")
    args = parser.parse_args()
    updater_ = Updater(args.token[0])
except Exception:
    try:
        f = open("token.txt", encoding="utf8")
        updater_ = Updater(f.readlines()[-1])
    except Exception:
        print('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω')

try:
    p = open("pass.txt", encoding="utf8")
    admin_pass = p.readlines()[0]
except Exception:
    admin_pass = 'Vasiliy_Samoylik_the_best_person_on_the_Earth'

user_name = ''  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_city = ''  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –≥–æ—Ä–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_address = ''  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∞–¥—Ä–µ—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_comment = ''  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
country = ''
current_city = ''  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Ç–µ–∫—É—â–∏–º –≥–æ—Ä–æ–¥–æ–º –≤ –∏–≥—Ä–µ "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
try_counter = 0  # –°—á—ë–∏—á–º–∫ –ø–æ–ø—ã—Ç–æ–∫ –≤ –∏–≥—Ä–µ "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
game_is_played = False  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —Å–æ—Å—Ç–∞—è–Ω–∏–µ–º –∏–≥—Ä—ã "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
is_admin = True  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞ —è—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
dumb_touple = {'–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '1', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': '2', '–ú–æ—Å–∫–≤–∞': '213', '–†–æ—Å—Å–∏—è': '225',
               '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å': '959', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö—Ä—ã–º': '977', '–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10174',
               '–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥': '10176', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–ª—Ç–∞–π': '10231', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢—ã–≤–∞': '10233',
               '–ï–≤—Ä–µ–π—Å–∫–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å': '10243', '–ß—É–∫–æ—Ç—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥': '10251',
               '–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10645', '–ë—Ä—è–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10650', '–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10658',
               '–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10672', '–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10687', '–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10693',
               '–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10699', '–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10705', '–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10712',
               '–û—Ä–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10772', '–†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10776', '–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10795',
               '–¢–∞–º–±–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10802', '–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10819', '–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10832',
               '–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10841', '–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10842', '–í–æ–ª–æ–≥–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10853',
               '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10857', '–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10897', '–ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10904',
               '–ü—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10926', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–µ–ª–∏—è': '10933', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ–º–∏': '10939',
               '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10946', '–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '10950', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π': '10995',
               '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–¥—ã–≥–µ—è': '11004', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –î–∞–≥–µ—Å—Ç–∞–Ω': '11010', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–≥—É—à–µ—Ç–∏—è': '11012',
               '–ö–∞–±–∞—Ä–¥–∏–Ω–æ-–ë–∞–ª–∫–∞—Ä—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞': '11013', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–ª–º—ã–∫–∏—è': '11015',
               '–ö–∞—Ä–∞—á–∞–µ–≤–æ-–ß–µ—Ä–∫–µ—Å—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞': '11020', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è ‚Äî –ê–ª–∞–Ω–∏—è': '11021',
               '–ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞': '11024', '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11029', '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π': '11069',
               '–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11070', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª': '11077', '–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11079',
               '–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11084', '–ü–µ–Ω–∑–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11095', '–ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π': '11108',
               '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω': '11111', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–æ—Ä–¥–æ–≤–∏—è': '11117', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω': '11119',
               '–°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11131', '–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11146', '–£–¥–º—É—Ä—Ç—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞': '11148',
               '–£–ª—å—è–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11153', '–ß—É–≤–∞—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞': '11156', '–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11158',
               '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11162', '–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11176',
               '–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥ ‚Äî –Æ–≥—Ä–∞': '11193', '–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11225',
               '–Ø–º–∞–ª–æ-–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥': '11232', '–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π': '11235', '–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11266',
               '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11282', '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π': '11309', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11316',
               '–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11318', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—É—Ä—è—Ç–∏—è': '11330', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –•–∞–∫–∞—Å–∏—è': '11340',
               '–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11353', '–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11375', '–ö–∞–º—á–∞—Ç—Å–∫–∏–π –∫—Ä–∞–π': '11398',
               '–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11403', '–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π': '11409', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)': '11443',
               '–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': '11450', '–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π': '11457', '–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π': '21949'}
keyboard_main = [['ü¶† Covid-19'],
                 ['üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É', 'üñäÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤', 'üåÜ –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å'],
                 ['üöá –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –º–µ—Ç—Ä–æ', 'üçü –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å',
                  'üè• –ü–æ–∫–∞–∑–∞—Ç—å –∞–ø—Ç–µ–∫–∏ –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –≤–∞—Å'],
                 ['üéÆ –ò–≥—Ä—ã']]
keyboard_games = [['üåÜ –£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥', 'üé≤ –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫'],
                  ['üï∂ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏']]
covid_keyboard = [['ü¶† –í —Ä–µ–≥–∏–æ–Ω–∞—Ö', 'ü¶† –í —Å—Ç—Ä–∞–Ω–∞—Ö'],
                  ['üï∂ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏']]
keyboard_admin = [['–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞']]
keyboard = keyboard_main


def main():
    global updater_
    dp = updater_.dispatcher
    conv_handler = ConversationHandler(
        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥.
        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /start. –û–Ω–∞ –∑–∞–¥–∞—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.
        entry_points=[CommandHandler('start', start)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        states={
            1: [MessageHandler(Filters.text, get_city)],
            2: [MessageHandler(Filters.text, get_address)],
            3: [MessageHandler(Filters.text, second_start)],
            4: [MessageHandler(Filters.text, get_comments)],
            5: [MessageHandler(Filters.text, text_commands)],
            6: [MessageHandler(Filters.text, get_covid_info_reg)],
            7: [MessageHandler(Filters.text, get_covid_info_coun)]
        },

        fallbacks=[CommandHandler('stop', stop)]
    )
    dp.add_handler(conv_handler)


def start(update, context):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    """
    global user_city
    global is_admin
    update.message.reply_text(
        '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, '
        '—á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞')
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥',
                              reply_markup=ReplyKeyboardRemove())
    return 1


def get_city(update, context):
    """
    –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    global user_city
    user_city = update.message.text
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å')
    return 2


def get_address(update, context):
    """
    –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    global user_address
    user_address = update.message.text
    reply_keyboard = [['–î–∞', '–ù–µ—Ç']]
    markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    update.message.reply_text(f'–í–∞—à –≥–æ—Ä–æ–¥: {user_city}')
    update.message.reply_text(f'–í–∞—à –∞–¥—Ä–µ—Å: {user_address}')
    update.message.reply_text('–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ?',
                              reply_markup=markup)
    return 3


def second_start(update, context):
    """
    –£—Ç–æ—á–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –¥–∞–Ω–Ω—ã–µ
    –∏ –≤—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    """
    global user_city
    if update.message.text == '–ù–µ—Ç':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1
    else:
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                  reply_markup=markup)
    return 5


def get_weather(update, context):
    """
    –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    global user_city
    if weather(user_city)["conditions"] is not None:
        update.message.reply_text(
            f'–í –≥–æ—Ä–æ–¥–µ {user_city} {weather(user_city)["conditions"]}')
        update.message.reply_text(
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather(user_city)["temp"]}C')
    else:
        update.message.reply_text(
            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')


def get_metro(update, context):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç—Ä–æ –≤–æ–∑–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç—É
    """
    global user_city
    global user_address
    metro_is_near = True
    metro_name = metro(user_city, user_address)[0]
    try:
        file_name = metro(user_city, user_address)[1]
        to_metro_distance = metro(user_city, user_address)[2]
    except Exception as e:
        metro_is_near = False
    if metro_name != '–†—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–µ—Ç—É –º–µ—Ç—Ä–æ' and metro_is_near is True:
        update.message.reply_photo(photo=open(f'img/{file_name}', 'rb'))
        update.message.reply_text(
            f'–ë–ª–∏–∂–∞–π—à–∞—è –∫ –≤–∞–º —Å—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ: {metro_name}')
        update.message.reply_text(
            f'–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Å—Ç–∞–Ω—Ü–∏–∏: {to_metro_distance}–º')
    else:
        update.message.reply_text(
            f'–°–µ–π—á–∞—Å –±—ã –º–µ—Ç—Ä–æ –≤ {user_city} –∏—Å–∫–∞—Ç—å')


def get_pharmacy(update, context):
    """
    –í—ã–≤–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–µ 10 –∞–ø—Ç–µ–∫ –≤ –≥–æ—Ä–æ–¥–µ
    """
    global user_city
    global user_address
    try:
        file_name = pharmacy(user_city, user_address)[0]
        update.message.reply_photo(photo=open(f'img/{file_name}', 'rb'))
    except Exception:
        update.message.reply_text(
            f'–†—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–µ—Ç—É –∞–ø—Ç–µ–∫–∏, –∑–µ–º–ª—è –≤–∞–º –ø—É—Ö–æ–º!')


def get_closest_mac(update, context):
    """
    –í—ã–≤–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–π –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    global user_city
    global user_address
    try:
        file_name = closest_mac(user_city, user_address)[0]
        pharmacy_name = closest_mac(user_city, user_address)[1]
        distance_to_pharmacy = closest_mac(user_city, user_address)[2]
        pharmacy_address = closest_mac(user_city, user_address)[3]
        pharmacy_time_of_works = closest_mac(user_city, user_address)[4]
        update.message.reply_photo(photo=open(f'img/{file_name}', 'rb'))
        update.message.reply_text(
            f'{pharmacy_name} {pharmacy_time_of_works}')
        update.message.reply_text(
            f'–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ {pharmacy_address}: {distance_to_pharmacy}–º')
    except Exception as e:
        print(e)
        update.message.reply_text(
            f'–†—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–µ—Ç—É –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å–∞, —É–¥–∞—á–∏ –Ω–µ –ø–æ–º–µ—Ä–µ—Ç—å —Å –≥–æ–ª–æ–¥—É!')


def get_comments(update, context):
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
    """
    global user_comment
    global user_name
    user_name = update.message.from_user.username
    user_comment = update.message.text
    return 5


def text_commands(update, context):
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    global user_comment
    global keyboard
    global current_city
    global game_is_played
    global is_admin
    global try_counter

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ
    if update.message.text == '/start':
        update.message.reply_text(
            '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, —á—Ç–æ'
            '–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞')
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1

    # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
    if update.message.text == 'üåÜ –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
        return 1

    # –í–≤–æ–¥ –æ—Ç–∑—ã–≤–∞
    if update.message.text == 'üñäÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤':
        reply_keyboard = [['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å']]
        markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
        update.message.reply_text(
            f'–°—é–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤', reply_markup=markup)
        return 4

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
    if update.message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        print("user_comment =", user_comment)
        markup = ReplyKeyboardMarkup(keyboard)
        if user_comment != '':
            update.message.reply_text('–í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω!',
                                      reply_markup=markup)
            comments(user_comment, user_name)
            user_comment = ''
        else:
            update.message.reply_text('–í–∞—à –æ—Ç–∑—ã–≤ –ø—É—Å—Ç',
                                      reply_markup=markup)

    if update.message.text == '/graph_vaccine':
        update.message.reply_photo(update.message.reply_photo(photo=open(f'img/{vaccine_graph(country)}', 'rb')))
        return 5

    if update.message.text == '/graph_death':
        update.message.reply_photo(update.message.reply_photo(photo=open(f'img/{death_graph(country)}', 'rb')))
        return 5

    if update.message.text == '/graph_new_cases':
        update.message.reply_photo(update.message.reply_photo(photo=open(f'img/{new_cases_graph(country)}', 'rb')))
        return 5

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –ø–æ–≥–æ–¥—ã
    if update.message.text == 'üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É':
        get_weather(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –º–µ—Ç—Ä–æ
    if update.message.text == 'üöá –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –º–µ—Ç—Ä–æ':
        get_metro(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –∞–ø—Ç–µ–∫ –≥–æ—Ä–æ–¥–∞
    if update.message.text == 'üè• –ü–æ–∫–∞–∑–∞—Ç—å –∞–ø—Ç–µ–∫–∏ –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –≤–∞—Å':
        get_pharmacy(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å–∞
    if update.message.text == 'üçü –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å':
        get_closest_mac(update, context)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–º–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –∏–≥—Ä–æ–≤—É—é
    if update.message.text == 'üéÆ –ò–≥—Ä—ã':
        keyboard = keyboard_games
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text(
            f'–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "{update.message.text}"',
            reply_markup=markup)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–º–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é
    if update.message.text == 'üï∂ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏':
        keyboard = keyboard_main
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text(
            f'–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "{update.message.text}"',
            reply_markup=markup)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
    if update.message.text == 'üåÜ –£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥':
        reply_keyboard = [['–°–¥–∞—Ç—å—Å—è']]
        markup = ReplyKeyboardMarkup(reply_keyboard)
        map_file, current_city = guess_the_city()
        update.message.reply_text(
            f'–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞', reply_markup=markup)
        update.message.reply_photo(
            photo=open(f'img/{map_file}', 'rb'))
        game_is_played = True
        print(current_city)

    # –û–±—Ä–∞–±—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–¥–∞—á—É –≤ –∏–≥—Ä–µ "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
    if update.message.text == '–°–¥–∞—Ç—å—Å—è' or try_counter >= 10:
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text(f'–≠—Ç–æ –±—ã–ª –≥–æ—Ä–æ–¥: {current_city}',
                                  reply_markup=markup)
        try_counter = 0
        game_is_played = False
        current_city = ''

    if update.message.text == 'ü¶† Covid-19':
        markup = ReplyKeyboardMarkup(covid_keyboard)
        update.message.reply_text('–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "Covid"', reply_markup=markup)

    if update.message.text == 'ü¶† –í —Ä–µ–≥–∏–æ–Ω–∞—Ö':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω')
        return 6

    if update.message.text == 'ü¶† –í —Å—Ç—Ä–∞–Ω–∞—Ö':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç—Ä–∞–Ω—É (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ)')
        update.message.reply_text('–ß—Ç–æ-–±—ã –≤—ã–≤–µ—Å—Ç–∏ –æ–±—â–∏—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–∂–º–∏—Ç–µ /tut')
        return 7

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –≤ –∏–≥—Ä–µ "–£–≥–∞–¥–∞–π –≥–æ—Ä–æ–¥"
    if game_is_played is True:
        try_counter += 1
        if update.message.text == current_city:
            markup = ReplyKeyboardMarkup(keyboard)
            update.message.reply_text(
                f'–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –≠—Ç–æ –±—ã–ª –≥–æ—Ä–æ–¥: {current_city}',
                reply_markup=markup)
            try_counter = 0
            game_is_played = False
        elif game_is_played is True \
                and update.message.text != current_city and try_counter >= 2:
            update.message.reply_text(
                f'–ù–µ–≤–µ—Ä–Ω–æ –∏–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ, '
                f'–æ—Å—Ç–∞–ª–æ—Å—å {11 - try_counter} –ø–æ–ø—ã—Ç–æ–∫')

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é –∏–≥—Ä
    if update.message.text == '‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        markup = ReplyKeyboardMarkup(keyboard)
        update.message.reply_text('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥', reply_markup=markup)

    # –ö–∏–¥–∞–µ–º–π –∫—É–±–∏–∫
    if update.message.text == 'üé≤ –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫':
        dice(update, context)

    # –ö–∏–¥–∞–µ–º –æ–¥–∏–Ω —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫
    if update.message.text == 'üé≤ –ö–∏–Ω—É—Ç—å –æ–¥–∏–Ω —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫':
        update.message.reply_text(' '.join(throw_a_cube(6)))

    # –ö–∏–¥–∞–µ–º 2 —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    if update.message.text == 'üé≤ üé≤–ö–∏–Ω—É—Ç—å 2 —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ':
        update.message.reply_text(' '.join(throw_a_cube(6, 2)))

    # –ö–∏–¥–∞–µ–º 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫
    if update.message.text == 'üé± –ö–∏–Ω—É—Ç—å 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫':
        update.message.reply_text(' '.join(throw_a_cube(20)))

    # –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    if update.message.text == admin_pass:
        is_admin = True
        markup = ReplyKeyboardMarkup(keyboard_admin)
        update.message.reply_text(
            '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏', reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å –∞–¥–º–∏–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    if update.message.text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞':
        markup = ReplyKeyboardMarkup(keyboard)
        if is_admin is True:
            update.message.reply_text('–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é...')
            update.message.reply_text(
                '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ –∞–¥—Ä–µ—Å, —á—Ç–æ'
                '–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞',
                reply_markup=ReplyKeyboardRemove())
            update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
            return 1
        else:
            update.message.reply_text('–ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –∞–¥–º–∏–Ω',
                                      reply_markup=markup)


def get_covid_info_coun(update, context):
    global country
    country = update.message.text
    if country != '/tut':
        update.message.reply_text(f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ {country}')
        try:
            update.message.reply_text(f'ü¶† –í—Å–µ–≥–æ —Å–ª—É—á–∞–µ–≤: {"{:,}".format(all_countries(country)[0])}\n'
                                      f'ü¶† –°–ª—É—á–∞–µ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(all_countries(country)[1])}\n'
                                      f'üíÄ –°–º–µ—Ä—Ç–µ–π: {"{:,}".format(all_countries(country)[2])}\n'
                                      f'üíÄ –°–º–µ—Ä—Ç–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(all_countries(country)[3])}\n'
                                      f'üçÄ –í—ã–ª–µ—á–µ–Ω–æ: {"{:,}".format(all_countries(country)[4])}\n'
                                      f'üçÄ –í—ã–ª–µ—á–µ–Ω–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(all_countries(country)[5])}\n'
                                      f'üö® –í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {"{:,}".format(all_countries(country)[6])}\n'
                                      '/graph_vaccine - –ù–∞–∂–º–∏ —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ –≤–∞–∫—Ü–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n'
                                      '/graph_death - –ù–∞–∂–º–∏ —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç–∏\n'
                                      '/graph_new_cases - –ù–∞–∂–º–∏ —á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∑–∞—Ä–∞–∂–µ–Ω–∏–π\n'
                                      )
        except Exception as s:
            print(s)
            update.message.reply_text('–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –≤–≤–µ–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å –æ—à–∏–±–∫–æ–π –∏–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ')
            return 5
    else:
        update.message.reply_text(f'ü¶† –í—Å–µ–≥–æ —Å–ª—É—á–∞–µ–≤: {"{:,}".format(global_stats()[0])}\n'
                                  f'ü¶† –°–ª—É—á–∞–µ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(global_stats()[1])}\n'
                                  f'üíÄ –°–º–µ—Ä—Ç–µ–π: {"{:,}".format(global_stats()[2])}\n'
                                  f'üíÄ –°–º–µ—Ä—Ç–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(global_stats()[3])}\n'
                                  f'üçÄ –í—ã–ª–µ—á–µ–Ω–æ: {"{:,}".format(global_stats()[4])}\n'
                                  f'üçÄ –í—ã–ª–µ—á–µ–Ω–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(global_stats()[5])}')
        country = ''
    return 5


def get_covid_info_reg(update, context):
    global country
    country = update.message.text
    print(country)
    response = \
        requests.get('http://milab.s3.yandex.net/2020/covid19-stat/data/v10/default_data.json').json()[
            'russia_stat_struct']['data']
    stats = []
    if country in dumb_touple:
        stats.append(response[dumb_touple[country]]['info']['cases'])
        stats.append(response[dumb_touple[country]]['info']['cases_delta'])
        stats.append(response[dumb_touple[country]]['info']['deaths'])
        stats.append(response[dumb_touple[country]]['info']['deaths_delta'])

        update.message.reply_text(f'ü¶† –í—Å–µ–≥–æ —Å–ª—É—á–∞–µ–≤: {"{:,}".format(stats[0])}\n'
                                  f'ü¶† –°–ª—É—á–∞–µ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(stats[1])}\n'
                                  f'üíÄ –°–º–µ—Ä—Ç–µ–π: {"{:,}".format(stats[2])}\n'
                                  f'üíÄ –°–º–µ—Ä—Ç–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {"{:,}".format(stats[3])}\n'
                                  )
    return 5


def stop(update, context):
    update.message.reply_text(
        "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è")
    return ConversationHandler.END  # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞, –æ–∑–Ω–∞—á–∞—é—â–∞—è –∫–æ–Ω–µ—Ü –¥–∏–∞–ª–æ–≥–∞.


if __name__ == '__main__':
    main()
    try:
        updater_.start_polling()
        updater_.idle()
    except Exception:
        pass
